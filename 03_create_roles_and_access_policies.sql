-- =============================================================================
-- CORTEX SEARCH ENTITLEMENTS DEMO - Roles and Row Access Policies
-- =============================================================================
-- This script creates the role-based access control system with row access policies
-- Run this script after completing 01_setup_database_and_table.sql and 02_load_data.sql

-- Set context
USE ROLE ACCOUNTADMIN;
USE DATABASE CORTEX_SEARCH_ENTITLEMENTS_DB;
USE SCHEMA ENTITLEMENTS;
USE WAREHOUSE ENTITLEMENTS_WH;

-- =============================================================================
-- STEP 1: CREATE FUNCTIONAL ROLES
-- =============================================================================
-- Create roles representing different organizational functions and access levels

-- Executive Level - Full Access
CREATE ROLE IF NOT EXISTS EXEC_GLOBAL_ACCESS
  COMMENT = 'Executive role with global access to all transaction data across regions and sensitivity levels';

-- Regional Management Roles
CREATE ROLE IF NOT EXISTS MANAGER_US_EAST
  COMMENT = 'Manager role with access to US East region data';

CREATE ROLE IF NOT EXISTS MANAGER_US_WEST  
  COMMENT = 'Manager role with access to US West region data';

CREATE ROLE IF NOT EXISTS MANAGER_EUROPE
  COMMENT = 'Manager role with access to Europe region data';

CREATE ROLE IF NOT EXISTS MANAGER_ASIA_PAC
  COMMENT = 'Manager role with access to Asia Pacific region data';

-- Department-Specific Roles
CREATE ROLE IF NOT EXISTS DEPT_FINANCE
  COMMENT = 'Finance department role with access to financial transaction data';

CREATE ROLE IF NOT EXISTS DEPT_FRAUD
  COMMENT = 'Fraud department role with access to high-risk and fraud-related transactions';

CREATE ROLE IF NOT EXISTS DEPT_COMPLIANCE
  COMMENT = 'Compliance department role with access to compliance-related transactions';

CREATE ROLE IF NOT EXISTS DEPT_OPERATIONS
  COMMENT = 'Operations department role with access to operational transaction data';

CREATE ROLE IF NOT EXISTS DEPT_CUSTOMER_SERVICE
  COMMENT = 'Customer service role with access to customer-related transaction data';

-- Customer Tier Specialists
CREATE ROLE IF NOT EXISTS SPECIALIST_PREMIUM
  COMMENT = 'Specialist role for premium customer transactions';

CREATE ROLE IF NOT EXISTS SPECIALIST_GOLD
  COMMENT = 'Specialist role for gold customer transactions';

-- Risk-Based Roles
CREATE ROLE IF NOT EXISTS ANALYST_LOW_RISK
  COMMENT = 'Analyst role with access to low-risk transactions only';

CREATE ROLE IF NOT EXISTS ANALYST_HIGH_RISK
  COMMENT = 'Analyst role with access to high-risk transactions';

-- External Partner Role
CREATE ROLE IF NOT EXISTS PARTNER_LIMITED
  COMMENT = 'External partner role with limited access to public data only';

-- =============================================================================
-- STEP 2: GRANT BASIC PERMISSIONS TO ROLES
-- =============================================================================
-- Grant necessary database and schema permissions

-- List of all created roles for easier management
SET DEMO_ROLES = ('EXEC_GLOBAL_ACCESS', 'MANAGER_US_EAST', 'MANAGER_US_WEST', 'MANAGER_EUROPE', 'MANAGER_ASIA_PAC', 
                  'DEPT_FINANCE', 'DEPT_FRAUD', 'DEPT_COMPLIANCE', 'DEPT_OPERATIONS', 'DEPT_CUSTOMER_SERVICE',
                  'SPECIALIST_PREMIUM', 'SPECIALIST_GOLD', 'ANALYST_LOW_RISK', 'ANALYST_HIGH_RISK', 'PARTNER_LIMITED');

-- Grant database and schema usage to all roles
GRANT USAGE ON DATABASE CORTEX_SEARCH_ENTITLEMENTS_DB TO ROLE EXEC_GLOBAL_ACCESS;
GRANT USAGE ON SCHEMA CORTEX_SEARCH_ENTITLEMENTS_DB.ENTITLEMENTS TO ROLE EXEC_GLOBAL_ACCESS;

GRANT USAGE ON DATABASE CORTEX_SEARCH_ENTITLEMENTS_DB TO ROLE MANAGER_US_EAST;
GRANT USAGE ON SCHEMA CORTEX_SEARCH_ENTITLEMENTS_DB.ENTITLEMENTS TO ROLE MANAGER_US_EAST;

GRANT USAGE ON DATABASE CORTEX_SEARCH_ENTITLEMENTS_DB TO ROLE MANAGER_US_WEST;
GRANT USAGE ON SCHEMA CORTEX_SEARCH_ENTITLEMENTS_DB.ENTITLEMENTS TO ROLE MANAGER_US_WEST;

GRANT USAGE ON DATABASE CORTEX_SEARCH_ENTITLEMENTS_DB TO ROLE MANAGER_EUROPE;
GRANT USAGE ON SCHEMA CORTEX_SEARCH_ENTITLEMENTS_DB.ENTITLEMENTS TO ROLE MANAGER_EUROPE;

GRANT USAGE ON DATABASE CORTEX_SEARCH_ENTITLEMENTS_DB TO ROLE MANAGER_ASIA_PAC;
GRANT USAGE ON SCHEMA CORTEX_SEARCH_ENTITLEMENTS_DB.ENTITLEMENTS TO ROLE MANAGER_ASIA_PAC;

GRANT USAGE ON DATABASE CORTEX_SEARCH_ENTITLEMENTS_DB TO ROLE DEPT_FINANCE;
GRANT USAGE ON SCHEMA CORTEX_SEARCH_ENTITLEMENTS_DB.ENTITLEMENTS TO ROLE DEPT_FINANCE;

GRANT USAGE ON DATABASE CORTEX_SEARCH_ENTITLEMENTS_DB TO ROLE DEPT_FRAUD;
GRANT USAGE ON SCHEMA CORTEX_SEARCH_ENTITLEMENTS_DB.ENTITLEMENTS TO ROLE DEPT_FRAUD;

GRANT USAGE ON DATABASE CORTEX_SEARCH_ENTITLEMENTS_DB TO ROLE DEPT_COMPLIANCE;
GRANT USAGE ON SCHEMA CORTEX_SEARCH_ENTITLEMENTS_DB.ENTITLEMENTS TO ROLE DEPT_COMPLIANCE;

GRANT USAGE ON DATABASE CORTEX_SEARCH_ENTITLEMENTS_DB TO ROLE DEPT_OPERATIONS;
GRANT USAGE ON SCHEMA CORTEX_SEARCH_ENTITLEMENTS_DB.ENTITLEMENTS TO ROLE DEPT_OPERATIONS;

GRANT USAGE ON DATABASE CORTEX_SEARCH_ENTITLEMENTS_DB TO ROLE DEPT_CUSTOMER_SERVICE;
GRANT USAGE ON SCHEMA CORTEX_SEARCH_ENTITLEMENTS_DB.ENTITLEMENTS TO ROLE DEPT_CUSTOMER_SERVICE;

GRANT USAGE ON DATABASE CORTEX_SEARCH_ENTITLEMENTS_DB TO ROLE SPECIALIST_PREMIUM;
GRANT USAGE ON SCHEMA CORTEX_SEARCH_ENTITLEMENTS_DB.ENTITLEMENTS TO ROLE SPECIALIST_PREMIUM;

GRANT USAGE ON DATABASE CORTEX_SEARCH_ENTITLEMENTS_DB TO ROLE SPECIALIST_GOLD;
GRANT USAGE ON SCHEMA CORTEX_SEARCH_ENTITLEMENTS_DB.ENTITLEMENTS TO ROLE SPECIALIST_GOLD;

GRANT USAGE ON DATABASE CORTEX_SEARCH_ENTITLEMENTS_DB TO ROLE ANALYST_LOW_RISK;
GRANT USAGE ON SCHEMA CORTEX_SEARCH_ENTITLEMENTS_DB.ENTITLEMENTS TO ROLE ANALYST_LOW_RISK;

GRANT USAGE ON DATABASE CORTEX_SEARCH_ENTITLEMENTS_DB TO ROLE ANALYST_HIGH_RISK;
GRANT USAGE ON SCHEMA CORTEX_SEARCH_ENTITLEMENTS_DB.ENTITLEMENTS TO ROLE ANALYST_HIGH_RISK;

GRANT USAGE ON DATABASE CORTEX_SEARCH_ENTITLEMENTS_DB TO ROLE PARTNER_LIMITED;
GRANT USAGE ON SCHEMA CORTEX_SEARCH_ENTITLEMENTS_DB.ENTITLEMENTS TO ROLE PARTNER_LIMITED;

-- Grant warehouse usage to all roles
GRANT USAGE ON WAREHOUSE ENTITLEMENTS_WH TO ROLE EXEC_GLOBAL_ACCESS;
GRANT USAGE ON WAREHOUSE ENTITLEMENTS_WH TO ROLE MANAGER_US_EAST;
GRANT USAGE ON WAREHOUSE ENTITLEMENTS_WH TO ROLE MANAGER_US_WEST;
GRANT USAGE ON WAREHOUSE ENTITLEMENTS_WH TO ROLE MANAGER_EUROPE;
GRANT USAGE ON WAREHOUSE ENTITLEMENTS_WH TO ROLE MANAGER_ASIA_PAC;
GRANT USAGE ON WAREHOUSE ENTITLEMENTS_WH TO ROLE DEPT_FINANCE;
GRANT USAGE ON WAREHOUSE ENTITLEMENTS_WH TO ROLE DEPT_FRAUD;
GRANT USAGE ON WAREHOUSE ENTITLEMENTS_WH TO ROLE DEPT_COMPLIANCE;
GRANT USAGE ON WAREHOUSE ENTITLEMENTS_WH TO ROLE DEPT_OPERATIONS;
GRANT USAGE ON WAREHOUSE ENTITLEMENTS_WH TO ROLE DEPT_CUSTOMER_SERVICE;
GRANT USAGE ON WAREHOUSE ENTITLEMENTS_WH TO ROLE SPECIALIST_PREMIUM;
GRANT USAGE ON WAREHOUSE ENTITLEMENTS_WH TO ROLE SPECIALIST_GOLD;
GRANT USAGE ON WAREHOUSE ENTITLEMENTS_WH TO ROLE ANALYST_LOW_RISK;
GRANT USAGE ON WAREHOUSE ENTITLEMENTS_WH TO ROLE ANALYST_HIGH_RISK;
GRANT USAGE ON WAREHOUSE ENTITLEMENTS_WH TO ROLE PARTNER_LIMITED;

-- =============================================================================
-- STEP 3: CREATE ROW ACCESS POLICIES
-- =============================================================================
-- Create sophisticated row access policies for different access patterns

-- Policy 1: Regional Access Policy
CREATE OR REPLACE ROW ACCESS POLICY REGIONAL_ACCESS_POLICY AS (REGION_CODE VARCHAR) 
RETURNS BOOLEAN ->
  CASE
    -- Executive role gets global access
    WHEN CURRENT_ROLE() = 'EXEC_GLOBAL_ACCESS' THEN TRUE
    
    -- Regional managers get access to their specific regions
    WHEN CURRENT_ROLE() = 'MANAGER_US_EAST' AND REGION_CODE = 'US_EAST' THEN TRUE
    WHEN CURRENT_ROLE() = 'MANAGER_US_WEST' AND REGION_CODE = 'US_WEST' THEN TRUE  
    WHEN CURRENT_ROLE() = 'MANAGER_EUROPE' AND REGION_CODE = 'EUROPE' THEN TRUE
    WHEN CURRENT_ROLE() = 'MANAGER_ASIA_PAC' AND REGION_CODE = 'ASIA_PAC' THEN TRUE
    
    -- Department roles get access based on business logic
    WHEN CURRENT_ROLE() IN ('DEPT_FINANCE', 'DEPT_FRAUD', 'DEPT_COMPLIANCE') THEN TRUE
    WHEN CURRENT_ROLE() = 'DEPT_OPERATIONS' AND REGION_CODE IN ('US_EAST', 'US_WEST') THEN TRUE
    WHEN CURRENT_ROLE() = 'DEPT_CUSTOMER_SERVICE' THEN TRUE
    
    ELSE FALSE
  END
COMMENT = 'Row access policy controlling access based on geographic regions';

-- Policy 2: Sensitivity Level Policy  
CREATE OR REPLACE ROW ACCESS POLICY SENSITIVITY_ACCESS_POLICY AS (SENSITIVITY_LEVEL VARCHAR, CUSTOMER_TIER VARCHAR, RISK_LEVEL VARCHAR)
RETURNS BOOLEAN ->
  CASE
    -- Executive role gets access to all sensitivity levels
    WHEN CURRENT_ROLE() = 'EXEC_GLOBAL_ACCESS' THEN TRUE
    
    -- Department-specific access based on sensitivity
    WHEN CURRENT_ROLE() = 'DEPT_FRAUD' AND SENSITIVITY_LEVEL IN ('RESTRICTED', 'CONFIDENTIAL', 'INTERNAL', 'PUBLIC') THEN TRUE
    WHEN CURRENT_ROLE() = 'DEPT_COMPLIANCE' AND SENSITIVITY_LEVEL IN ('CONFIDENTIAL', 'INTERNAL', 'PUBLIC') THEN TRUE
    WHEN CURRENT_ROLE() = 'DEPT_FINANCE' AND SENSITIVITY_LEVEL IN ('INTERNAL', 'PUBLIC') AND CUSTOMER_TIER IN ('PREMIUM', 'GOLD') THEN TRUE
    WHEN CURRENT_ROLE() IN ('DEPT_OPERATIONS', 'DEPT_CUSTOMER_SERVICE') AND SENSITIVITY_LEVEL IN ('INTERNAL', 'PUBLIC') THEN TRUE
    
    -- Customer tier specialists
    WHEN CURRENT_ROLE() = 'SPECIALIST_PREMIUM' AND CUSTOMER_TIER = 'PREMIUM' AND SENSITIVITY_LEVEL IN ('CONFIDENTIAL', 'INTERNAL', 'PUBLIC') THEN TRUE
    WHEN CURRENT_ROLE() = 'SPECIALIST_GOLD' AND CUSTOMER_TIER = 'GOLD' AND SENSITIVITY_LEVEL IN ('INTERNAL', 'PUBLIC') THEN TRUE
    
    -- Risk-based access
    WHEN CURRENT_ROLE() = 'ANALYST_HIGH_RISK' AND RISK_LEVEL IN ('HIGH', 'CRITICAL') THEN TRUE
    WHEN CURRENT_ROLE() = 'ANALYST_LOW_RISK' AND RISK_LEVEL = 'LOW' AND SENSITIVITY_LEVEL = 'PUBLIC' THEN TRUE
    
    -- Regional managers get internal and public data for their regions
    WHEN CURRENT_ROLE() IN ('MANAGER_US_EAST', 'MANAGER_US_WEST', 'MANAGER_EUROPE', 'MANAGER_ASIA_PAC') 
         AND SENSITIVITY_LEVEL IN ('INTERNAL', 'PUBLIC') THEN TRUE
    
    -- External partners get public data only
    WHEN CURRENT_ROLE() = 'PARTNER_LIMITED' AND SENSITIVITY_LEVEL = 'PUBLIC' THEN TRUE
    
    ELSE FALSE
  END
COMMENT = 'Row access policy controlling access based on data sensitivity levels and business context';

-- Policy 3: Department Access Policy
CREATE OR REPLACE ROW ACCESS POLICY DEPARTMENT_ACCESS_POLICY AS (PRIMARY_DEPARTMENT VARCHAR, RISK_LEVEL VARCHAR, AMOUNT NUMBER)
RETURNS BOOLEAN ->
  CASE 
    -- Executive gets all access
    WHEN CURRENT_ROLE() = 'EXEC_GLOBAL_ACCESS' THEN TRUE
    
    -- Department-specific access with cross-department visibility for specific cases
    WHEN CURRENT_ROLE() = 'DEPT_FINANCE' THEN TRUE  -- Finance sees everything for oversight
    WHEN CURRENT_ROLE() = 'DEPT_FRAUD' AND (PRIMARY_DEPARTMENT = 'FRAUD' OR RISK_LEVEL IN ('HIGH', 'CRITICAL')) THEN TRUE
    WHEN CURRENT_ROLE() = 'DEPT_COMPLIANCE' AND (PRIMARY_DEPARTMENT IN ('COMPLIANCE', 'FRAUD') OR AMOUNT > 10000) THEN TRUE
    WHEN CURRENT_ROLE() = 'DEPT_OPERATIONS' AND PRIMARY_DEPARTMENT IN ('OPERATIONS', 'CUSTOMER_SERVICE') THEN TRUE
    WHEN CURRENT_ROLE() = 'DEPT_CUSTOMER_SERVICE' AND PRIMARY_DEPARTMENT = 'CUSTOMER_SERVICE' THEN TRUE
    
    -- Regional managers see their region's data regardless of department
    WHEN CURRENT_ROLE() IN ('MANAGER_US_EAST', 'MANAGER_US_WEST', 'MANAGER_EUROPE', 'MANAGER_ASIA_PAC') THEN TRUE
    
    -- Specialists and analysts have limited cross-department access
    WHEN CURRENT_ROLE() IN ('SPECIALIST_PREMIUM', 'SPECIALIST_GOLD') THEN TRUE
    WHEN CURRENT_ROLE() = 'ANALYST_HIGH_RISK' AND RISK_LEVEL IN ('HIGH', 'CRITICAL') THEN TRUE
    WHEN CURRENT_ROLE() = 'ANALYST_LOW_RISK' AND RISK_LEVEL = 'LOW' THEN TRUE
    
    -- Partners only see public data from operations and customer service
    WHEN CURRENT_ROLE() = 'PARTNER_LIMITED' AND PRIMARY_DEPARTMENT IN ('OPERATIONS', 'CUSTOMER_SERVICE') THEN TRUE
    
    ELSE FALSE
  END
COMMENT = 'Row access policy controlling access based on department ownership and business rules';

-- =============================================================================
-- STEP 4: APPLY ROW ACCESS POLICIES TO TABLE
-- =============================================================================
-- Apply the policies to the credit card transactions table
-- Note: Multiple policies are combined with AND logic

ALTER TABLE CREDIT_CARD_TRANSACTIONS 
ADD ROW ACCESS POLICY REGIONAL_ACCESS_POLICY ON (REGION_CODE);

ALTER TABLE CREDIT_CARD_TRANSACTIONS 
ADD ROW ACCESS POLICY SENSITIVITY_ACCESS_POLICY ON (SENSITIVITY_LEVEL, CUSTOMER_TIER, RISK_LEVEL);

ALTER TABLE CREDIT_CARD_TRANSACTIONS 
ADD ROW ACCESS POLICY DEPARTMENT_ACCESS_POLICY ON (PRIMARY_DEPARTMENT, RISK_LEVEL, AMOUNT);

-- =============================================================================
-- STEP 5: GRANT TABLE ACCESS TO ROLES
-- =============================================================================
-- Grant SELECT permission to all roles (row access policies will control what they see)

GRANT SELECT ON TABLE CREDIT_CARD_TRANSACTIONS TO ROLE EXEC_GLOBAL_ACCESS;
GRANT SELECT ON TABLE CREDIT_CARD_TRANSACTIONS TO ROLE MANAGER_US_EAST;
GRANT SELECT ON TABLE CREDIT_CARD_TRANSACTIONS TO ROLE MANAGER_US_WEST;
GRANT SELECT ON TABLE CREDIT_CARD_TRANSACTIONS TO ROLE MANAGER_EUROPE;
GRANT SELECT ON TABLE CREDIT_CARD_TRANSACTIONS TO ROLE MANAGER_ASIA_PAC;
GRANT SELECT ON TABLE CREDIT_CARD_TRANSACTIONS TO ROLE DEPT_FINANCE;
GRANT SELECT ON TABLE CREDIT_CARD_TRANSACTIONS TO ROLE DEPT_FRAUD;
GRANT SELECT ON TABLE CREDIT_CARD_TRANSACTIONS TO ROLE DEPT_COMPLIANCE;
GRANT SELECT ON TABLE CREDIT_CARD_TRANSACTIONS TO ROLE DEPT_OPERATIONS;
GRANT SELECT ON TABLE CREDIT_CARD_TRANSACTIONS TO ROLE DEPT_CUSTOMER_SERVICE;
GRANT SELECT ON TABLE CREDIT_CARD_TRANSACTIONS TO ROLE SPECIALIST_PREMIUM;
GRANT SELECT ON TABLE CREDIT_CARD_TRANSACTIONS TO ROLE SPECIALIST_GOLD;
GRANT SELECT ON TABLE CREDIT_CARD_TRANSACTIONS TO ROLE ANALYST_LOW_RISK;
GRANT SELECT ON TABLE CREDIT_CARD_TRANSACTIONS TO ROLE ANALYST_HIGH_RISK;
GRANT SELECT ON TABLE CREDIT_CARD_TRANSACTIONS TO ROLE PARTNER_LIMITED;

-- =============================================================================
-- STEP 6: VERIFICATION QUERIES
-- =============================================================================
-- Show all roles created
SHOW ROLES LIKE '%EXEC_GLOBAL_ACCESS%';
SHOW ROLES LIKE '%MANAGER_%';
SHOW ROLES LIKE '%DEPT_%';
SHOW ROLES LIKE '%SPECIALIST_%';
SHOW ROLES LIKE '%ANALYST_%';
SHOW ROLES LIKE '%PARTNER_%';

-- Show row access policies
SHOW ROW ACCESS POLICIES ON CREDIT_CARD_TRANSACTIONS;

-- Test data visibility for different roles (examples - run individually with different roles)
/*
-- Example test queries (uncomment and run with specific roles):

-- Test as Executive (should see all data)
USE ROLE EXEC_GLOBAL_ACCESS;
SELECT COUNT(*) AS TOTAL_VISIBLE, 
       COUNT(DISTINCT REGION_CODE) AS REGIONS,
       COUNT(DISTINCT SENSITIVITY_LEVEL) AS SENSITIVITY_LEVELS
FROM CREDIT_CARD_TRANSACTIONS;

-- Test as US East Manager (should see only US East data)
USE ROLE MANAGER_US_EAST;
SELECT COUNT(*) AS TOTAL_VISIBLE, 
       STRING_AGG(DISTINCT REGION_CODE, ', ') AS VISIBLE_REGIONS
FROM CREDIT_CARD_TRANSACTIONS;

-- Test as Partner (should see only public data)
USE ROLE PARTNER_LIMITED;
SELECT COUNT(*) AS TOTAL_VISIBLE,
       STRING_AGG(DISTINCT SENSITIVITY_LEVEL, ', ') AS VISIBLE_SENSITIVITY_LEVELS
FROM CREDIT_CARD_TRANSACTIONS;
*/

SELECT 'Row access policies and roles setup complete!' AS STATUS;
